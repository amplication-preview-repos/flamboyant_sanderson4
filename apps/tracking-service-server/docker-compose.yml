version: "3"
services:
  server:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${PORT}:3000
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@db:3306/${DB_NAME}
      LOG_LEVEL: ${LOG_LEVEL}
      SERVICE_NAME: ${SERVICE_NAME}
      JAEGER_AGENT_HOST: ${JAEGER_AGENT_HOST}
      JAEGER_AGENT_PORT: ${JAEGER_AGENT_PORT}
      OTEL_COLLECTOR_HOST: ${OTEL_COLLECTOR_HOST}
      OTEL_COLLECTOR_PORT_GRPC: ${OTEL_COLLECTOR_PORT_GRPC}
      OTEL_COLLECTOR_PORT_HTTP: ${OTEL_COLLECTOR_PORT_HTTP}
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT}
    depends_on:
      - redis
    restart: on-failure
  migrate:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    command: npm run db:init
    working_dir: /app/server
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@db:3306/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
      mqtt-broker:
        condition: service_healthy
  db:
    image: mysql:8.3
    ports:
      - ${DB_PORT}:3306
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
        - -u
        - ${DB_USER}
      timeout: 45s
      interval: 10s
      retries: 10
    command: --default-authentication-plugin=mysql_native_password
    restart: always
  mqtt-broker:
    image: emqx:5.4.0
    ports:
      - ${MQTT_PORT}:1883
      - ${MQTT_WS_PORT}:8083
      - ${MQTT_WEB_UI_PORT}:18083
    healthcheck:
      test:
        - CMD
        - /opt/emqx/bin/emqx
        - ctl
        - status
      interval: 5s
      timeout: 25s
      retries: 5
  adminer:
    image: adminer
    restart: always
    ports:
      - 1234:8080
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - ${JAEGER_AGENT_PORT}:${JAEGER_AGENT_PORT}
      - 14268:14268
      - 14250:4317
  opentelemetry:
    image: otel/opentelemetry-collector:latest
    ports:
      - ${OTEL_COLLECTOR_PORT_GRPC}:${OTEL_COLLECTOR_PORT_GRPC}
      - ${OTEL_COLLECTOR_PORT_HTTP}:${OTEL_COLLECTOR_PORT_HTTP}
      - 1888:1888
      - 13133:13133
      - 55670:55679
    volumes:
      - ./otel-config.yml:/etc/otel-config.yml
    command:
      - --config=/etc/otel-config.yml
    depends_on:
      - jaeger
  redis:
    container_name: ${REDIS_HOST}
    image: redis:7
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis:/data
volumes:
  postgres: ~
  mysql: ~
  redis:
    driver: local
